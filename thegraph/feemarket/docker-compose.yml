version: "3"
services:
  graph-node:
    image: xiaoch05/graph-node:v2.0
    # image: graphprotocol/graph-node:v0.25.2
    restart: always
    ports:
      - "8000:8000"
      - "8020:8020"
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      # ethereum: "mainnet:https://eth-mainnet.g.alchemy.com/v2/1fYUXWGBTu0naj6Stf7Sh77VAO-J5j4v"
      # ethereum: "goerli:https://eth-goerli.g.alchemy.com/v2/oanvaPnbDzYvigj3O_67w3SBcvbDvim8"
      ethereum: "darwinia.10426170:https://rpc.darwinia.network"
      # ethereum: "pangoro:http://g2.pangoro-p2p.darwinia.network:9933"
      # ethereum: "mainnet:https://eth-mainnet.g.alchemy.com/v2/1fYUXWGBTu0naj6Stf7Sh77VAO-J5j4v goerli:https://eth-goerli.g.alchemy.com/v2/oanvaPnbDzYvigj3O_67w3SBcvbDvim8 darwinia:https://rpc.darwinia.network pangoro:http://g2.pangoro-p2p.darwinia.network:9933"
      GRAPH_LOG: "info"
      GRAPH_ETHEREUM_CLEANUP_BLOCKS: "true"
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - "5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
