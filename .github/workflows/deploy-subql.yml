name: Deploy Subql

on:
  push:
    branches: [ fewensa-release ]

env:
  SUBQUERY_ORG: darwinia-network
  SUBQL_ACCESS_TOKEN: ${{ secrets.SUBQUERY_TOKEN }}
  SUBQL_INDEXER_VERSION: v1.0.0
  SUBQL_QUERY_VERSION: v1.0.0

jobs:
  deploy-mmr:
    name: Deploy mmr
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        project:
#          - mmr
#          - apps
#          - bridger
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16

#      - name: install deps
#        working-directory: subql
#        run: |
#          npm i
#          npx lerna bootstrap
#          npm run build:common

      - name: deploy project
        working-directory: subql
        if: ${{ contains(github.event.head_commit.message, '[deploy]') }}
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          JSON_ARGS=$(node scripts/msgparser.js "${COMMIT_MESSAGE}")
          ITEMS=$(echo $JSON_ARGS | jq '.[]')
          echo ${ITEMS}
          BASE_PATH=$(pwd)

          for ITEM in ${ITEMS}; do
            PROJECT=$(echo $ITEM | jq -r '.project')
            CHAINS=$(echo $ITEM | jq -r '.chains[]')
            DEPLOY_ALL_CHAIN=$(echo $ITEM | jq -r '.all')
            if [ "${DEPLOY_ALL_CHAIN}" == "true" ]; then
              FILE_PROJECt_CHAIN_MAPPING=../.maintain/subql-project-chain.json
              CHAINS=$(jq -r ".${PROJECT} | .[]" $FILE_PROJECt_CHAIN_MAPPING)
            fi

            echo ''
            echo ''
            echo "====== Deploy ${{ matrix.project }} for ${CHAIN} ======"

            cd ${BASE_PATH}/packages/${{ matrix.project }}
            npm run build -- ${CHAIN}
            npm run publish -- ${CHAIN}

            DICT=$(cat project.yaml | yq '.network.dictionary')
            echo npx subql deployment:deploy -d \
              --type stage \
              --indexerVersion=${{ env.SUBQL_INDEXER_VERSION }} \
              --queryVersion=${{ env.SUBQL_QUERY_VERSION }} \
              --org ${{ env.SUBQUERY_ORG }} \
              --projectName subql-${{ matrix.project }}-${CHAIN} \
              --endpoint $(cat project.yaml | yq '.network.endpoint') \
              --ipfsCID $(cat .project-cid) \
              ${DICT:+--dict $DICT}
          done

