enum OrderStatus {
  Finished
  InProgress
}

type OrderOutOfSlot @jsonField {
  orderId: String
  outOfSlotBlock: Int
}

type Relayer @entity {
  id: ID! # destination-address

  quoteHistory: [RelayerQuote] @derivedFrom(field: "relayer")

  totalSlashs: BigInt
  slashs: [Slash] @derivedFrom(field: "relayer")

  totalRewards: BigInt
  assignedRelayerRewardsId: [String]
  deliveredRelayerRewardsId: [String]
  confirmedRelayerRewardsId: [String]

  totalOrders: Int
  assignedRelayerOrdersId: [String]
  deliveredRelayerOrdersId: [String]
  confirmedRelayerOrdersId: [String]
}

type RelayerQuote @entity {
  id: ID! # destination-blockNumber-eventIndex

  blockTime: Date
  blockNumber: Int
  extrinsicIndex: Int
  eventIndex: Int

  amount: BigInt
  relayer: Relayer
}

type Market @entity {
  id: ID! # destination

  totalSlash: BigInt
  totalReward: BigInt

  averageSpeed: Int # millisecond
  inProgressOrders: [OrderOutOfSlot]

  finishedOrders: Int # real time
  inProgressInSlotOrders: Int # real time
  inProgressOutOfSlotOrders: Int # real time

  feeHistoryLastTime: Int # block number
  feeHistory: [MarketFee] @derivedFrom(field: "market")
}

type MarketFee @entity {
  id: ID! # destination-blockNumber

  fee: BigInt
  timestamp: Date

  market: Market
}

type Order @entity {
  id: ID! # destination-laneId-nonce

  sender: String
  sourceTxHash: String

  fee: BigInt
  status: OrderStatus

  slotTime: Int # number of blocks
  outOfSlotBlock: Int # block number
  confirmedSlotIndex: Int # -1: out of slot / 0: #1 / 1: #2 / 2: #3

  createBlockTime: Date
  createBlockNumber: Int
  createExtrinsicIndex: Int
  createEventIndex: Int

  finishBlockTime: Date
  finishBlockNumber: Int
  finishExtrinsicIndex: Int
  finishEventIndex: Int

  assignedRelayersId: [String]
  deliveredRelayersId: [String]
  confirmedRelayersId: [String]

  slashs: [Slash] @derivedFrom(field: "order")
  rewards: [Reward] @derivedFrom(field: "order")
}

type Reward @entity {
  id: ID! # destination-laneId-nonce-eventIndex

  order: Order

  blockTime: Date
  blockNumber: Int
  extrinsicIndex: Int
  eventIndex: Int

  assignedRelayersId: [String]
  deliveredRelayersId: [String]
  confirmedRelayersId: [String]

  assignedAmounts: [BigInt]
  deliveredAmounts: [BigInt]
  confirmedAmounts: [BigInt]

  treasuryAmount: BigInt
}

type Slash @entity {
  id: ID! # destination-laneId-nonce-eventIndex

  order: Order

  blockTime: Date
  blockNumber: Int
  extrinsicIndex: Int
  eventIndex: Int

  amount: BigInt
  relayer: Relayer

  sentTime: Int # block number
  confirmTime: Int # block number
  delayTime: Int # number of blocks
}
